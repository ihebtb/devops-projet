pipeline {
    agent any
    environment {
        registry = "ihebtb/devops"
        registryCredential = 'docker-hub-creds'
        dockerImage = ''
    }
    
    stages {
        stage("Cloning Project") {
            steps {
                git branch: 'main', 
                url: 'https://github.com/ihebtb/devops-projet.git'
                echo 'Checkout stage done'
            }
        }
        
        stage('MVN Clean') {
            steps {
                sh 'mvn clean -e'
                echo 'Clean stage done'
            }
        }
    
        stage("Compile Project") {
            steps {
                sh 'mvn compile -X -e'
                echo 'Compile stage done'
            }
        }
        
        stage("Unit Tests") {
            steps {
                sh 'mvn test'
                echo 'Unit tests stage done'
            }
        }
        
        stage("SonarQube Analysis") {
            steps {
                // Example command for SonarQube analysis
                 sh 'mvn sonar:sonar -Dsonar.projectKey=tpAchat -Dsonar.host.url=http://localhost:9000/ -Dsonar.login=sqp_a62ea5e9b0ecc84272967f9cdc400b74cf7d884e'
                echo 'SonarQube analysis done'
            }
        }
          
        stage("Maven Build") {
            steps {
                sh "mvn package -DskipTests=true"
                echo 'Build project done'
            }
        }
        
        stage("Nexus Deploy") {
            steps {
                // Example command for Nexus deployment
                 sh "mvn deploy:deploy-file -DgroupId=tn.esprit -DartifactId=FirstMavenProject -Dversion=1.0 -Dpackaging=jar -Dfile=target/FirstMavenProject-1.0.jar -DrepositoryId=deploymentRepo -Durl=http://192.168.10.114:8082/repository/maven-releases/"
                echo 'Nexus deployment done'
            }
        }
        
        stage('Building Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${registry}:${BUILD_NUMBER}")
                }
            }
        }
        
        stage('Deploy Docker Image') {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        
        stage('Cleaning up') {
            steps {
                sh "docker rmi ${registry}:${BUILD_NUMBER}"
                echo 'Cleanup done'
            }
        }
    }
}